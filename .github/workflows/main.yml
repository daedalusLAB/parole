name: Test PAROLE pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-parole:
    runs-on: ubuntu-22.04          # ← fijamos imagen estable con Arrow pre-compilado
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - name: 🔄 Checkout
        uses: actions/checkout@v4

      - name: 🧰 System deps + Arrow
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            ffmpeg \
            libasound2-dev \
            libgtk2.0-dev \
            r-base \
            curl \
            build-essential \
            libarrow-dev          # ← disponible en jammy, <1 min

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: 📦 Python extras (pyarrow p/verificación)
        run: |
          pip install --upgrade pip
          pip install pyarrow pandas
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: ⚙️ Install PAROLE (script no-prompt)
        run: |
          yes y | bash install_parole.sh

      - name: 🧪 Run test video
        run: |
          chmod +x scripts/parole.sh
          ./scripts/parole.sh \
            data/videos/2016-01-01_0000_US_KNBC_The_Ellen_DeGeneres_Show_91.07-95.45_today.mp4 \
            resultados/ --parquet

      - name: ✅ Verify output exists
        run: |
          test -f "resultados/2016-01-01_0000_US_KNBC_The_Ellen_DeGeneres_Show_91.07-95.45_today/2016-01-01_0000_US_KNBC_The_Ellen_DeGeneres_Show_91.07-95.45_today_prosody.parquet"

      - name: 🔍 Validate Parquet (≠ NA)
        run: |
          python - <<'PY'
          import pathlib, pyarrow.parquet as pq, sys
          p = pathlib.Path("resultados") / \
              "2016-01-01_0000_US_KNBC_The_Ellen_DeGeneres_Show_91.07-95.45_today" / \
              "2016-01-01_0000_US_KNBC_The_Ellen_DeGeneres_Show_91.07-95.45_today_prosody.parquet"
          tbl = pq.read_table(p)
          if tbl.num_rows == 0:
              sys.exit("Parquet vacío")
          if all(col.null_count == tbl.num_rows for col in tbl.itercolumns()):
              sys.exit("Todas las columnas son NA")
          print(f"✔ Parquet válido: {tbl.num_rows} filas, {tbl.num_columns} columnas")
          PY

      - name: 📤 Upload resultados
        uses: actions/upload-artifact@v4
        with:
          name: parole-output-${{ matrix.python-version }}
          path: resultados/
          if-no-files-found: error
